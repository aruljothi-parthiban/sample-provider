openapi: 3.0.1
info:
  title: Product API
  description: Pactflow Product API demo
  version: 1.0.1
servers:
- url: https://virtserver.swaggerhub.com/aruljothi_parthiban/Sample-Product-Api/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /products:
    get:
      summary: List all products
      description: Returns all products
      operationId: getAllProducts
      responses:
        "200":
          description: successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              examples:
                application/json:
                  value:
                  - id: "1234"
                    type: food
                    price: 42
                    description: Indian cuisine
                    sku: Test
        "400":
          description: Invalid ID supplied
          content: {}
    post:
      summary: Create a product
      description: Creates a new product
      operationId: createProduct
      requestBody:
        description: Create a new Product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
            examples:
              application/json:
                value:
                  id: "1234"
                  name: idli
                  type: food
                  price: 42
                  description: Indian cuisine
                  sku: Test
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Product'
              examples:
                application/json:
                  value:
                    id: "1234"
                    type: food
                    price: 42
                    description: Indian cuisine
                    sku: Test
  /product/{id}:
    get:
      summary: Find product by ID
      description: Returns a single product
      operationId: getProductByID
      parameters:
      - name: id
        in: path
        description: ID of product to get
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 10
      responses:
        "200":
          description: successful operation
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Product'
              examples:
                application/json:
                  value:
                    id: "1234"
                    type: food
                    price: 42
                    description: Indian cuisine
                    sku: Test
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: Product not found
          content: {}
  /suggest:
    get:
      summary: Suggest
      description: Returns a suggestions
      operationId: getSuggestions
      parameters:
      - name: request_type
        in: query
        description: Request Type
        required: true
        style: form
        explode: false
        schema:
          type: string
        example: suggest
      - name: account_id
        in: query
        description: Account ID
        required: true
        style: form
        explode: false
        schema:
          type: number
        example: 6466
      - name: catalog_views
        in: query
        description: Catalog Views
        required: true
        style: form
        explode: false
        schema:
          type: string
        example: catalog_views
      - name: q
        in: query
        description: Search Text
        required: true
        style: form
        explode: false
        schema:
          type: string
        example: specialty hand tools
      - name: ref_url
        in: query
        description: Reference Url
        required: true
        style: form
        explode: false
        schema:
          type: string
        example: https://sit3-www.canadiantire.ca/
      - name: request_id
        in: query
        description: Request ID
        required: true
        style: form
        explode: false
        schema:
          type: string
        example: e42c75bad3fe4b14bf1ba74fd3403ac2
      - name: _br_uid_2
        in: query
        description: UID
        required: true
        style: form
        explode: false
        schema:
          type: string
        example: uid=5678975391619:v=12.0:ts=1654004108717:hc=39&
      responses:
        "200":
          description: successful operation
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SuggestionResult'
              examples:
                application/json:
                  value:
                    queryContext: specialty hand tools
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: Product not found
          content: {}
components:
  schemas:
    Product:
      required:
      - id
      - name
      - price
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        name:
          type: string
        version:
          type: string
        price:
          type: number
        description:
          type: string
        sku:
          type: string
    SuggestionResult:
      required:
      - queryContext
      type: object
      properties:
        queryContext:
          type: string
